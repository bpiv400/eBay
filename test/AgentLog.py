import math
from agent.util import get_agent_name
from Heap import Heap
from test.ActionLog import ActionLog
from test.util import compare_input_dicts


class AgentLog:
    def __init__(self, byr=False, delay=False):
        self.byr = byr
        self.delay = delay
        self.model_name = get_agent_name(byr=self.byr, delay=self.delay,
                                         policy=True)
        self.action_queue = Heap(entry_type=ActionLog)

    def push_action(self, action=None):
        self.action_queue.push(action)

    def get_action(self, agent_tuple=None):
        obs, _, done, info = agent_tuple
        obs = obs._asdict()
        # check that turn matches agent type
        next_action = self.action_queue.pop()  # type: ActionLog
        # if the tuple isn't a dummy generated by reset wrapper
        if info is not None:
            assert (info.turn % 2 == 1 and self.byr) or (not self.byr and info.turn % 2 == 0)
            # check that turns match
            assert next_action.turn == info.turn
            # if not the first turn, check that thread id matches
            if next_action.turn != 1:
                assert next_action.thread_id == info.thread_id
            # check that time is the same
            assert math.isclose(next_action.months, info.months)
            # check that done flags are the same
            assert done == info.done
        else:
            assert (next_action.turn == 1 and self.byr) or \
                   (next_action.turn % 2 == 0 and not self.byr)
        if not next_action.censored:
            compare_input_dicts(model=self.model_name,
                                stored_inputs=next_action.input_dict,
                                env_inputs=obs)
        return next_action.con

    def verify_done(self):
        assert self.action_queue.empty
